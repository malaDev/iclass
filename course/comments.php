<?php// this controller needs Twig$twig = start_twig('course');if (isset($request[1]) && $request[1] != ''){	switch($request[1])	{		case "new":			// No cache headers for AJAX			header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");			header("Cache-Control: no-store, no-cache, must-revalidate");			header("Cache-Control: post-check=0, pre-check=0", false);			header("Pragma: no-cache");						// file added to the comment			$file = $_POST['myfile'];						// body of the comment			$comment = $_POST["new-comment"];			$comment = htmlspecialchars(stripslashes($comment));			$comment = mysql_real_escape_string($comment);			$comment = make_links($comment);			$comment = embed_youtube($comment);						$result4 = mysql_query("SELECT * FROM users WHERE uvanetid = '$uvanetid'");			$user = mysql_fetch_array($result4);			$user_id = $user['id'];						// insert comment into database			$folderid = $_POST["page_id"];			if (!mysql_query("INSERT INTO comments (user_id, folder_id, file, body, latest_update) VALUES ('$user_id', '$folderid', '$file', '$comment', CURRENT_TIMESTAMP)"))			{				echo "<div class='alert alert-error'>Er ging iets fout met het plaatsen van de comment</div>";			}						// show all the comments of this episode including the new posted comment			echo file_get_contents(abs_path('comments/'.$folderid));			break;		case "delete":			// No cache headers for AJAX			header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");			header("Cache-Control: no-store, no-cache, must-revalidate");			header("Cache-Control: post-check=0, pre-check=0", false);			header("Pragma: no-cache");						// uvanetid current user			//$uvanetid = $_GET["u"];						// Delete file if file was added to comment			$cid = $_GET["q"];			$result3 = mysql_query("SELECT file FROM comments WHERE id = $cid");			$file = mysql_fetch_array($result3);			$file = $file['file'];			if ($file != "") {				unlink("../uploads/$file");			}						// delete comment			mysql_query("DELETE FROM comments WHERE id = $cid");						// delete all replies linked to the comment			mysql_query("DELETE FROM replies WHERE comment_id = $cid");						// show all the comments of this episode including the new posted comment			$folderid = $_GET["f"];			echo file_get_contents(abs_path('comments/'.$folderid));			break;		default:			// gets all comments for a specific page			if(is_numeric($request[1]))			{				$id = $request[1];				require_once("lib/models/comments.php");								echo $twig->render('_comments_ajax.html', array(					'page_id' => $id,					'logged_in' => $loggedIn,					'progress' => percentage($uvanetid),					'url' => urlencode($url),					'username' => $name,					'uvanetid' => $uvanetid,					'admin' => isAdmin($uvanetid),					'comments' => Comments::for_page($id, $uvanetid)				));			}			else			{				header("Status: 404 Not Found");				echo "404";			}			break;	}}else{	header("Status: 404 Not Found");	echo "404";}