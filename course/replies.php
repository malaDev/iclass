<?phpif (!isset($request[1])) error_404();switch($request[1]){	case "new":		// add a new reply		add();		break;	case "delete":		// remove a previous reply		remove();		break;	default:		// if comment number given, render all replies		if($request[1] != '' && is_numeric($request[1]))			get($request[1]);		else			error_404();}function add(){	global $uvanetid;	// No cache headers for AJAX	header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");	header("Cache-Control: no-store, no-cache, must-revalidate");	header("Cache-Control: post-check=0, pre-check=0", false);	header("Pragma: no-cache");		// comment id	$id = $_GET["q"];		// reply body	$reply = $_GET["b"];	$reply = htmlspecialchars(stripslashes($reply));	$reply = mysql_real_escape_string($reply); 	$reply = make_links($reply);	$reply = embed_youtube($reply);		$result = mysql_query("SELECT * FROM users WHERE uvanetid = '$uvanetid'");	$user = mysql_fetch_array($result);	$user_id = $user['id'];		// insert reply into database	$query_insertReply = "INSERT INTO replies (user_id, comment_id, body) VALUES ('$user_id', '$id', '$reply')";	$result_insertReply = mysql_query($query_insertReply);	if (!$result_insertReply){		echo "<div class='alert alert-error'><a class='close' data-dismiss='alert'>&times;</a>Er ging iets fout met het plaatsen van de reply</div>";	}		// update the latest_update field of the comment where the reply was posted with the current_timestamp	$query_updateComment = "UPDATE comments SET latest_update = CURRENT_TIMESTAMP WHERE id = $id";	$result_updateComment = mysql_query($query_updateComment);	if (!$result_updateComment){		echo "<div class='alert alert-error'><a class='close' data-dismiss='alert'>&times;</a>Er ging iets fout met het updaten van de comment</div>";	}		// re-render all replies	get($id);}function remove(){	// No cache headers for AJAX	header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");	header("Cache-Control: no-store, no-cache, must-revalidate");	header("Cache-Control: post-check=0, pre-check=0", false);	header("Pragma: no-cache");		// comment id	$id = $_GET["q"];		// reply id	$reply_id = $_GET["r"];		// delete reply	$sql = "DELETE FROM replies WHERE id = '{$reply_id}'";	$result = mysql_query($sql);		// re-render all replies	get($id);}function get($id){	require_once("lib/models/comments.php");		global $uvanetid;	render('course', '_replies_ajax.html', array(		'id' => $id,		'comment' => array('','','','','', Comments::replies_for_comment($id,$uvanetid))	));}